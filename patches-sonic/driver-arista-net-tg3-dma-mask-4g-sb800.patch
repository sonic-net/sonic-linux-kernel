Force DMA accesses to be done in the 4G range due to a SB800 limitation

From: Samuel Angebault <angebault.samuel@gmail.com>

This issue is seen on Arista DCS-7050QX-32 SKUs
---
 drivers/net/ethernet/broadcom/tg3.c |   17 ++++++++++++++---
 drivers/net/ethernet/broadcom/tg3.h |    1 +
 2 files changed, 15 insertions(+), 3 deletions(-)

diff --git a/drivers/net/ethernet/broadcom/tg3.c b/drivers/net/ethernet/broadcom/tg3.c
index 5143cdd0e..72198ef56 100644
--- a/drivers/net/ethernet/broadcom/tg3.c
+++ b/drivers/net/ethernet/broadcom/tg3.c
@@ -16353,6 +16353,16 @@ static int tg3_get_invariants(struct tg3 *tp, const struct pci_device_id *ent)
 		} while (bridge);
 	}
 
+	/* The embedded nic in ATI's SB800 can only dma to 32bit
+	 * addresses.  partno(noe) rev 5785041
+	 */
+	if (tg3_asic_rev(tp) == ASIC_REV_5785) {
+		if ((tp->pdev->bus->number == 0) &&
+		    (tp->pdev->devfn == PCI_DEVFN(0x14, 0x6))) {
+			tg3_flag_set(tp, 4G_DMA_ONLY);
+		}
+	}
+
 	if (tg3_asic_rev(tp) == ASIC_REV_5704 ||
 	    tg3_asic_rev(tp) == ASIC_REV_5714)
 		tp->pdev_peer = tg3_find_peer(tp);
@@ -16880,8 +16890,9 @@ static int tg3_get_invariants(struct tg3 *tp, const struct pci_device_id *ent)
 
 	if (tg3_asic_rev(tp) == ASIC_REV_5705 &&
 	    (grc_misc_cfg == GRC_MISC_CFG_BOARD_ID_5788 ||
-	     grc_misc_cfg == GRC_MISC_CFG_BOARD_ID_5788M))
-		tg3_flag_set(tp, IS_5788);
+	     grc_misc_cfg == GRC_MISC_CFG_BOARD_ID_5788M)) {
+		tg3_flag_set(tp, 4G_DMA_ONLY);
+	}
 
 	if (!tg3_flag(tp, IS_5788) &&
 	    tg3_asic_rev(tp) != ASIC_REV_5700)
@@ -17796,7 +17807,7 @@ static int tg3_init_one(struct pci_dev *pdev,
 	 * On 64-bit systems without IOMMU, use 64-bit dma_mask and
 	 * do DMA address check in __tg3_start_xmit().
 	 */
-	if (tg3_flag(tp, IS_5788))
+	if (tg3_flag(tp, 4G_DMA_ONLY))
 		persist_dma_mask = dma_mask = DMA_BIT_MASK(32);
 	else if (tg3_flag(tp, 40BIT_DMA_BUG)) {
 		persist_dma_mask = dma_mask = DMA_BIT_MASK(40);
diff --git a/drivers/net/ethernet/broadcom/tg3.h b/drivers/net/ethernet/broadcom/tg3.h
index 1000c8940..3e004b0bf 100644
--- a/drivers/net/ethernet/broadcom/tg3.h
+++ b/drivers/net/ethernet/broadcom/tg3.h
@@ -3120,6 +3120,7 @@ enum TG3_FLAGS {
 	TG3_FLAG_ROBOSWITCH,
 	TG3_FLAG_ONE_DMA_AT_ONCE,
 	TG3_FLAG_RGMII_MODE,
+	TG3_FLAG_4G_DMA_ONLY,
 
 	/* Add new flags before this comment and TG3_FLAG_NUMBER_OF_FLAGS */
 	TG3_FLAG_NUMBER_OF_FLAGS,	/* Last entry in enum TG3_FLAGS */
